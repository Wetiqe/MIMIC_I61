{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"example_pipeline","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"f5c803c995814a848a8d3417c0dedae4":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_f6b9b3d3259444b58476fd5d281aaba0","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0bc48f8eab3e4a37a1e5a954e6b63bdb","value":3}},"f6b9b3d3259444b58476fd5d281aaba0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0bc48f8eab3e4a37a1e5a954e6b63bdb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"856e0995fef8482183583c0a1d7b00ca":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_6f921658af844a8e959947f9c91f0b38","max":4,"min":0,"orientation":"horizontal","style":"IPY_MODEL_df2f233317ae43099df39624915fdde2","value":4}},"6f921658af844a8e959947f9c91f0b38":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"df2f233317ae43099df39624915fdde2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3bc13316c36447328ca225ce4ed4a9b0":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_185a0ec3f76d49d79cef86022cb33233","max":7,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c53350ee95e94ddc9a13f5e534e62c60","value":7}},"185a0ec3f76d49d79cef86022cb33233":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c53350ee95e94ddc9a13f5e534e62c60":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["# Connect to Google Drive"],"metadata":{"id":"nMLGduiJYCXC"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"VAfHV_9wP1jZ","executionInfo":{"status":"error","timestamp":1650572138495,"user_tz":-60,"elapsed":5319,"user":{"displayName":"Jianzhang Ni","userId":"18109982546966884557"}},"outputId":"31f8e11d-b015-41f3-eeb9-f667aa80ed84"},"execution_count":null,"outputs":[{"output_type":"error","ename":"MessageError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-d5df0069828e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms)\u001b[0m\n\u001b[1;32m    107\u001b[0m       \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_remount\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m       \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout_ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 109\u001b[0;31m       ephemeral=True)\n\u001b[0m\u001b[1;32m    110\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    111\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, ephemeral)\u001b[0m\n\u001b[1;32m    126\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     _message.blocking_request(\n\u001b[0;32m--> 128\u001b[0;31m         'request_auth', request={'authType': 'dfs_ephemeral'}, timeout_sec=None)\n\u001b[0m\u001b[1;32m    129\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m   \u001b[0mmountpoint\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_os\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanduser\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    173\u001b[0m   request_id = send_request(\n\u001b[1;32m    174\u001b[0m       request_type, request, parent=parent, expect_reply=True)\n\u001b[0;32m--> 175\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    104\u001b[0m         reply.get('colab_msg_id') == message_id):\n\u001b[1;32m    105\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}]},{"cell_type":"code","source":["import pycaret"],"metadata":{"id":"6TkpRBkTHYx2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Load the data "],"metadata":{"id":"-QwbY9TtYITz"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"cfEgJ2-ORlFg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# admissions = pd.read_csv('drive/MyDrive/DS/core/admissions.csv')\n","patients = pd.read_csv('drive/MyDrive/DS/core/patients.csv')\n","# transfer = pd.read_csv('drive/MyDrive/DS/core/transfers.csv')\n","# outevents = pd.read_csv('drive/MyDrive/DS/icu/outputevents.csv')\n","icu_stay = pd.read_csv('drive/MyDrive/DS/icu/icustays.csv')\n","# proce_events = pd.read_csv('drive/MyDrive/DS/icu/procedureevents.csv')\n","vital = pd.read_csv('drive/MyDrive/DS/ed/vitalsign.csv')"],"metadata":{"id":"KzjeaKWkRuja"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["patients_a = patients.drop(['anchor_year_group'],axis=1).set_index('subject_id')\n","vital_a = vital.drop(['rhythm','pain','charttime','stay_id'], axis=1).drop_duplicates('subject_id', keep='first').set_index('subject_id')"],"metadata":{"id":"ZJY6pSLQ14Zn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.concat([patients_a, vital_a], axis=1)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":302},"id":"tbzW0U6k3sCG","executionInfo":{"status":"ok","timestamp":1648399031402,"user_tz":-60,"elapsed":298,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"28746cdb-e612-4057-b619-6da15418fab5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           gender  anchor_age  anchor_year  dod  temperature  heartrate  \\\n","subject_id                                                                \n","10000019        M           0         2129  NaN          NaN        NaN   \n","10000032        F          52         2180  NaN         97.7       79.0   \n","10000044        F           0         2150  NaN          NaN        NaN   \n","10000048        F          23         2126  NaN          NaN        NaN   \n","10000068        F          19         2160  NaN          NaN        NaN   \n","\n","            resprate  o2sat    sbp   dbp  \n","subject_id                                \n","10000019         NaN    NaN    NaN   NaN  \n","10000032        16.0   98.0  107.0  60.0  \n","10000044         NaN    NaN    NaN   NaN  \n","10000048         NaN    NaN    NaN   NaN  \n","10000068         NaN    NaN    NaN   NaN  "],"text/html":["\n","  <div id=\"df-3ae07023-e5b2-414f-8e2e-a1c1f465690b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>dod</th>\n","      <th>temperature</th>\n","      <th>heartrate</th>\n","      <th>resprate</th>\n","      <th>o2sat</th>\n","      <th>sbp</th>\n","      <th>dbp</th>\n","    </tr>\n","    <tr>\n","      <th>subject_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10000019</th>\n","      <td>M</td>\n","      <td>0</td>\n","      <td>2129</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10000032</th>\n","      <td>F</td>\n","      <td>52</td>\n","      <td>2180</td>\n","      <td>NaN</td>\n","      <td>97.7</td>\n","      <td>79.0</td>\n","      <td>16.0</td>\n","      <td>98.0</td>\n","      <td>107.0</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000044</th>\n","      <td>F</td>\n","      <td>0</td>\n","      <td>2150</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10000048</th>\n","      <td>F</td>\n","      <td>23</td>\n","      <td>2126</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10000068</th>\n","      <td>F</td>\n","      <td>19</td>\n","      <td>2160</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ae07023-e5b2-414f-8e2e-a1c1f465690b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3ae07023-e5b2-414f-8e2e-a1c1f465690b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3ae07023-e5b2-414f-8e2e-a1c1f465690b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data['dod']=data['dod'].replace(np.nan, 0, regex=True)\n","data['dod']=data['dod'].replace('-', 1, regex=True)"],"metadata":{"id":"juAIbrYp600V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_full = data.dropna(how='any')\n","data_full.head()"],"metadata":{"id":"q0B2aCaLkq4a","executionInfo":{"status":"ok","timestamp":1648399038674,"user_tz":-60,"elapsed":307,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"colab":{"base_uri":"https://localhost:8080/","height":302},"outputId":"0ed3c20c-1c6e-40a7-a6ff-2e27b45dd608"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           gender  anchor_age  anchor_year dod  temperature  heartrate  \\\n","subject_id                                                               \n","10000032        F          52         2180   0         97.7       79.0   \n","10000084        M          72         2160   0         97.5       78.0   \n","10000108        M          25         2163   0         98.2       66.0   \n","10000115        M          24         2154   0         97.6       81.0   \n","10000117        F          48         2174   0         97.6       81.0   \n","\n","            resprate  o2sat    sbp   dbp  \n","subject_id                                \n","10000032        16.0   98.0  107.0  60.0  \n","10000084        16.0  100.0  114.0  71.0  \n","10000108        15.0  100.0  111.0  62.0  \n","10000115        18.0   99.0  120.0  71.0  \n","10000117        16.0  100.0  148.0  83.0  "],"text/html":["\n","  <div id=\"df-14bf8135-fb87-4cac-9f03-8085b05d693a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>dod</th>\n","      <th>temperature</th>\n","      <th>heartrate</th>\n","      <th>resprate</th>\n","      <th>o2sat</th>\n","      <th>sbp</th>\n","      <th>dbp</th>\n","    </tr>\n","    <tr>\n","      <th>subject_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10000032</th>\n","      <td>F</td>\n","      <td>52</td>\n","      <td>2180</td>\n","      <td>0</td>\n","      <td>97.7</td>\n","      <td>79.0</td>\n","      <td>16.0</td>\n","      <td>98.0</td>\n","      <td>107.0</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000084</th>\n","      <td>M</td>\n","      <td>72</td>\n","      <td>2160</td>\n","      <td>0</td>\n","      <td>97.5</td>\n","      <td>78.0</td>\n","      <td>16.0</td>\n","      <td>100.0</td>\n","      <td>114.0</td>\n","      <td>71.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000108</th>\n","      <td>M</td>\n","      <td>25</td>\n","      <td>2163</td>\n","      <td>0</td>\n","      <td>98.2</td>\n","      <td>66.0</td>\n","      <td>15.0</td>\n","      <td>100.0</td>\n","      <td>111.0</td>\n","      <td>62.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000115</th>\n","      <td>M</td>\n","      <td>24</td>\n","      <td>2154</td>\n","      <td>0</td>\n","      <td>97.6</td>\n","      <td>81.0</td>\n","      <td>18.0</td>\n","      <td>99.0</td>\n","      <td>120.0</td>\n","      <td>71.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000117</th>\n","      <td>F</td>\n","      <td>48</td>\n","      <td>2174</td>\n","      <td>0</td>\n","      <td>97.6</td>\n","      <td>81.0</td>\n","      <td>16.0</td>\n","      <td>100.0</td>\n","      <td>148.0</td>\n","      <td>83.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14bf8135-fb87-4cac-9f03-8085b05d693a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-14bf8135-fb87-4cac-9f03-8085b05d693a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-14bf8135-fb87-4cac-9f03-8085b05d693a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data_aged = data_full[data_full['anchor_age'] != 0 ]\n","target = data_aged.pop('dod')\n","print(\"First five targets: \\n\", target[:5])\n","data_aged.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":440},"id":"OoNX6RDC8AhB","executionInfo":{"status":"ok","timestamp":1648399041284,"user_tz":-60,"elapsed":214,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"ac8a0261-69e2-4530-a150-2a09d56f9f82"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["First five targets: \n"," subject_id\n","10000032    0\n","10000084    0\n","10000108    0\n","10000115    0\n","10000117    0\n","Name: dod, dtype: object\n"]},{"output_type":"execute_result","data":{"text/plain":["           gender  anchor_age  anchor_year  temperature  heartrate  resprate  \\\n","subject_id                                                                     \n","10000032        F          52         2180         97.7       79.0      16.0   \n","10000084        M          72         2160         97.5       78.0      16.0   \n","10000108        M          25         2163         98.2       66.0      15.0   \n","10000115        M          24         2154         97.6       81.0      18.0   \n","10000117        F          48         2174         97.6       81.0      16.0   \n","\n","            o2sat    sbp   dbp  \n","subject_id                      \n","10000032     98.0  107.0  60.0  \n","10000084    100.0  114.0  71.0  \n","10000108    100.0  111.0  62.0  \n","10000115     99.0  120.0  71.0  \n","10000117    100.0  148.0  83.0  "],"text/html":["\n","  <div id=\"df-74bbf85d-923c-4508-bf60-128b943912c7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>temperature</th>\n","      <th>heartrate</th>\n","      <th>resprate</th>\n","      <th>o2sat</th>\n","      <th>sbp</th>\n","      <th>dbp</th>\n","    </tr>\n","    <tr>\n","      <th>subject_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10000032</th>\n","      <td>F</td>\n","      <td>52</td>\n","      <td>2180</td>\n","      <td>97.7</td>\n","      <td>79.0</td>\n","      <td>16.0</td>\n","      <td>98.0</td>\n","      <td>107.0</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000084</th>\n","      <td>M</td>\n","      <td>72</td>\n","      <td>2160</td>\n","      <td>97.5</td>\n","      <td>78.0</td>\n","      <td>16.0</td>\n","      <td>100.0</td>\n","      <td>114.0</td>\n","      <td>71.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000108</th>\n","      <td>M</td>\n","      <td>25</td>\n","      <td>2163</td>\n","      <td>98.2</td>\n","      <td>66.0</td>\n","      <td>15.0</td>\n","      <td>100.0</td>\n","      <td>111.0</td>\n","      <td>62.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000115</th>\n","      <td>M</td>\n","      <td>24</td>\n","      <td>2154</td>\n","      <td>97.6</td>\n","      <td>81.0</td>\n","      <td>18.0</td>\n","      <td>99.0</td>\n","      <td>120.0</td>\n","      <td>71.0</td>\n","    </tr>\n","    <tr>\n","      <th>10000117</th>\n","      <td>F</td>\n","      <td>48</td>\n","      <td>2174</td>\n","      <td>97.6</td>\n","      <td>81.0</td>\n","      <td>16.0</td>\n","      <td>100.0</td>\n","      <td>148.0</td>\n","      <td>83.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74bbf85d-923c-4508-bf60-128b943912c7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-74bbf85d-923c-4508-bf60-128b943912c7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-74bbf85d-923c-4508-bf60-128b943912c7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from sklearn import preprocessing\n","import numpy as np\n","\n","scaler = preprocessing.StandardScaler().fit(data_aged.iloc[:,1:])\n","data_final = pd.DataFrame(scaler.transform(data_aged.iloc[:,1:]))\n","data_final.index = data_aged.index\n","data_final.insert(0,'gender',data_aged.loc[:,'gender'])\n","data_final.columns = data_aged.columns\n","data_final['gender'].replace('F', 0, regex=True, inplace=True)\n","data_final['gender'].replace('M', 1, regex=True, inplace=True)\n","data_final['gender'] = data_final['gender'].astype('float64')\n","data_final"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":519},"id":"m_9UYjQv8lgV","executionInfo":{"status":"ok","timestamp":1648400445457,"user_tz":-60,"elapsed":1280,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"c0bc7247-05a2-47d6-8eb2-5f763545add2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            gender  anchor_age  anchor_year  temperature  heartrate  resprate  \\\n","subject_id                                                                      \n","10000032       0.0    0.246815     1.206029    -0.060682  -0.179865 -0.036234   \n","10000084       1.0    1.224054     0.355922    -0.096181  -0.238606 -0.036234   \n","10000108       1.0   -1.072456     0.483438     0.028065  -0.943509 -0.064109   \n","10000115       1.0   -1.121318     0.100890    -0.078431  -0.062381  0.019516   \n","10000117       0.0    0.051368     0.950997    -0.078431  -0.062381 -0.036234   \n","...            ...         ...          ...          ...        ...       ...   \n","19999636       0.0   -1.316766     1.461061    -0.255925  -0.121123 -0.036234   \n","19999750       1.0   -0.095218    -0.324164    -0.060682   0.407554  0.131015   \n","19999784       1.0    0.491125    -1.386797     0.099063  -0.121123  0.019516   \n","19999828       0.0   -0.046356    -0.196648     0.010316   0.055103  0.019516   \n","19999914       0.0    0.100230     0.270911     0.258807  -0.062381 -0.203483   \n","\n","               o2sat       sbp       dbp  \n","subject_id                                \n","10000032   -0.058041 -1.185107 -0.122444  \n","10000084    0.170691 -0.851276 -0.049996  \n","10000108    0.170691 -0.994347 -0.109271  \n","10000115    0.056325 -0.565136 -0.049996  \n","10000117    0.170691  0.770189  0.029037  \n","...              ...       ...       ...  \n","19999636    0.170691 -0.374375  0.002693  \n","19999750    0.170691  2.105513  0.200277  \n","19999784    0.170691  1.390161  0.141002  \n","19999828    0.170691 -1.185107 -0.023652  \n","19999914    0.170691 -1.852770 -0.155374  \n","\n","[156338 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-07408df4-38e8-42ac-a902-0cf739a876dc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>temperature</th>\n","      <th>heartrate</th>\n","      <th>resprate</th>\n","      <th>o2sat</th>\n","      <th>sbp</th>\n","      <th>dbp</th>\n","    </tr>\n","    <tr>\n","      <th>subject_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10000032</th>\n","      <td>0.0</td>\n","      <td>0.246815</td>\n","      <td>1.206029</td>\n","      <td>-0.060682</td>\n","      <td>-0.179865</td>\n","      <td>-0.036234</td>\n","      <td>-0.058041</td>\n","      <td>-1.185107</td>\n","      <td>-0.122444</td>\n","    </tr>\n","    <tr>\n","      <th>10000084</th>\n","      <td>1.0</td>\n","      <td>1.224054</td>\n","      <td>0.355922</td>\n","      <td>-0.096181</td>\n","      <td>-0.238606</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>-0.851276</td>\n","      <td>-0.049996</td>\n","    </tr>\n","    <tr>\n","      <th>10000108</th>\n","      <td>1.0</td>\n","      <td>-1.072456</td>\n","      <td>0.483438</td>\n","      <td>0.028065</td>\n","      <td>-0.943509</td>\n","      <td>-0.064109</td>\n","      <td>0.170691</td>\n","      <td>-0.994347</td>\n","      <td>-0.109271</td>\n","    </tr>\n","    <tr>\n","      <th>10000115</th>\n","      <td>1.0</td>\n","      <td>-1.121318</td>\n","      <td>0.100890</td>\n","      <td>-0.078431</td>\n","      <td>-0.062381</td>\n","      <td>0.019516</td>\n","      <td>0.056325</td>\n","      <td>-0.565136</td>\n","      <td>-0.049996</td>\n","    </tr>\n","    <tr>\n","      <th>10000117</th>\n","      <td>0.0</td>\n","      <td>0.051368</td>\n","      <td>0.950997</td>\n","      <td>-0.078431</td>\n","      <td>-0.062381</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>0.770189</td>\n","      <td>0.029037</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19999636</th>\n","      <td>0.0</td>\n","      <td>-1.316766</td>\n","      <td>1.461061</td>\n","      <td>-0.255925</td>\n","      <td>-0.121123</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>-0.374375</td>\n","      <td>0.002693</td>\n","    </tr>\n","    <tr>\n","      <th>19999750</th>\n","      <td>1.0</td>\n","      <td>-0.095218</td>\n","      <td>-0.324164</td>\n","      <td>-0.060682</td>\n","      <td>0.407554</td>\n","      <td>0.131015</td>\n","      <td>0.170691</td>\n","      <td>2.105513</td>\n","      <td>0.200277</td>\n","    </tr>\n","    <tr>\n","      <th>19999784</th>\n","      <td>1.0</td>\n","      <td>0.491125</td>\n","      <td>-1.386797</td>\n","      <td>0.099063</td>\n","      <td>-0.121123</td>\n","      <td>0.019516</td>\n","      <td>0.170691</td>\n","      <td>1.390161</td>\n","      <td>0.141002</td>\n","    </tr>\n","    <tr>\n","      <th>19999828</th>\n","      <td>0.0</td>\n","      <td>-0.046356</td>\n","      <td>-0.196648</td>\n","      <td>0.010316</td>\n","      <td>0.055103</td>\n","      <td>0.019516</td>\n","      <td>0.170691</td>\n","      <td>-1.185107</td>\n","      <td>-0.023652</td>\n","    </tr>\n","    <tr>\n","      <th>19999914</th>\n","      <td>0.0</td>\n","      <td>0.100230</td>\n","      <td>0.270911</td>\n","      <td>0.258807</td>\n","      <td>-0.062381</td>\n","      <td>-0.203483</td>\n","      <td>0.170691</td>\n","      <td>-1.852770</td>\n","      <td>-0.155374</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>156338 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07408df4-38e8-42ac-a902-0cf739a876dc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-07408df4-38e8-42ac-a902-0cf739a876dc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-07408df4-38e8-42ac-a902-0cf739a876dc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["# Auto ML"],"metadata":{"id":"oWrxtAcyIxbX"}},{"cell_type":"code","source":["automl_data = data_final.copy()\n","automl_data['target'] = target\n","automl_data_final = pd.concat([automl_data[automl_data['target']==1].iloc[:2000,:],automl_data[automl_data['target']==0].iloc[:2000*4,:]],axis=0)\n","automl_data_final"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":519},"id":"W14l6efSKlDO","executionInfo":{"status":"ok","timestamp":1648400462495,"user_tz":-60,"elapsed":212,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"fef02bfd-c2e2-43b8-e5b3-13edbefe21a0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            gender  anchor_age  anchor_year  temperature  heartrate  resprate  \\\n","subject_id                                                                      \n","10001884       0.0    1.028606    -1.259281     0.241058  -1.060992 -0.091984   \n","10005024       1.0    0.637711    -0.579196     0.134561   0.407554 -0.064109   \n","10010058       1.0    1.614949    -0.536690     0.099063  -1.295960 -0.036234   \n","10010471       0.0    2.054706     0.143395    -0.184928   2.581002  0.131015   \n","10011365       0.0    1.272916     0.228406     0.010316  -0.826025 -0.036234   \n","...            ...         ...          ...          ...        ...       ...   \n","10520661       0.0    1.126330     0.355922     0.045814   0.583780 -0.036234   \n","10520862       1.0    0.393401     1.758598    -0.007434  -0.884767 -0.036234   \n","10520918       0.0   -1.121318    -0.876733    -0.007434   0.701263  0.131015   \n","10521105       0.0    1.956982     0.610954     0.223308  -0.708541  0.075265   \n","10521109       0.0   -0.974732     0.780975     0.028065  -0.062381 -0.036234   \n","\n","               o2sat       sbp       dbp target  \n","subject_id                                       \n","10001884   -0.286773  1.247090 -0.017066      1  \n","10005024   -0.401139 -0.517445 -0.155374      1  \n","10010058    0.170691 -1.709699 -0.181719      1  \n","10010471    0.056325  0.197907 -0.069755      1  \n","10011365    0.056325  0.579428 -0.142202      1  \n","...              ...       ...       ...    ...  \n","10520661   -0.286773  2.343964  0.042210      0  \n","10520862    0.170691 -0.278995 -0.063169      0  \n","10520918   -0.401139  0.340977 -0.010479      0  \n","10521105   -0.401139  1.628611 -0.069755      0  \n","10521109    0.170691  0.817879  0.114657      0  \n","\n","[10000 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-693cf7bd-898a-4373-b2bc-d3af1364f3d6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>temperature</th>\n","      <th>heartrate</th>\n","      <th>resprate</th>\n","      <th>o2sat</th>\n","      <th>sbp</th>\n","      <th>dbp</th>\n","      <th>target</th>\n","    </tr>\n","    <tr>\n","      <th>subject_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10001884</th>\n","      <td>0.0</td>\n","      <td>1.028606</td>\n","      <td>-1.259281</td>\n","      <td>0.241058</td>\n","      <td>-1.060992</td>\n","      <td>-0.091984</td>\n","      <td>-0.286773</td>\n","      <td>1.247090</td>\n","      <td>-0.017066</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10005024</th>\n","      <td>1.0</td>\n","      <td>0.637711</td>\n","      <td>-0.579196</td>\n","      <td>0.134561</td>\n","      <td>0.407554</td>\n","      <td>-0.064109</td>\n","      <td>-0.401139</td>\n","      <td>-0.517445</td>\n","      <td>-0.155374</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10010058</th>\n","      <td>1.0</td>\n","      <td>1.614949</td>\n","      <td>-0.536690</td>\n","      <td>0.099063</td>\n","      <td>-1.295960</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>-1.709699</td>\n","      <td>-0.181719</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10010471</th>\n","      <td>0.0</td>\n","      <td>2.054706</td>\n","      <td>0.143395</td>\n","      <td>-0.184928</td>\n","      <td>2.581002</td>\n","      <td>0.131015</td>\n","      <td>0.056325</td>\n","      <td>0.197907</td>\n","      <td>-0.069755</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10011365</th>\n","      <td>0.0</td>\n","      <td>1.272916</td>\n","      <td>0.228406</td>\n","      <td>0.010316</td>\n","      <td>-0.826025</td>\n","      <td>-0.036234</td>\n","      <td>0.056325</td>\n","      <td>0.579428</td>\n","      <td>-0.142202</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10520661</th>\n","      <td>0.0</td>\n","      <td>1.126330</td>\n","      <td>0.355922</td>\n","      <td>0.045814</td>\n","      <td>0.583780</td>\n","      <td>-0.036234</td>\n","      <td>-0.286773</td>\n","      <td>2.343964</td>\n","      <td>0.042210</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10520862</th>\n","      <td>1.0</td>\n","      <td>0.393401</td>\n","      <td>1.758598</td>\n","      <td>-0.007434</td>\n","      <td>-0.884767</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>-0.278995</td>\n","      <td>-0.063169</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10520918</th>\n","      <td>0.0</td>\n","      <td>-1.121318</td>\n","      <td>-0.876733</td>\n","      <td>-0.007434</td>\n","      <td>0.701263</td>\n","      <td>0.131015</td>\n","      <td>-0.401139</td>\n","      <td>0.340977</td>\n","      <td>-0.010479</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10521105</th>\n","      <td>0.0</td>\n","      <td>1.956982</td>\n","      <td>0.610954</td>\n","      <td>0.223308</td>\n","      <td>-0.708541</td>\n","      <td>0.075265</td>\n","      <td>-0.401139</td>\n","      <td>1.628611</td>\n","      <td>-0.069755</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10521109</th>\n","      <td>0.0</td>\n","      <td>-0.974732</td>\n","      <td>0.780975</td>\n","      <td>0.028065</td>\n","      <td>-0.062381</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>0.817879</td>\n","      <td>0.114657</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-693cf7bd-898a-4373-b2bc-d3af1364f3d6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-693cf7bd-898a-4373-b2bc-d3af1364f3d6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-693cf7bd-898a-4373-b2bc-d3af1364f3d6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["from pycaret.classification import *\n","\n","clf1 = setup(data = automl_data_final, target = 'target',\n","preprocess = False,silent=True, session_id=42)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":708,"referenced_widgets":["f5c803c995814a848a8d3417c0dedae4","f6b9b3d3259444b58476fd5d281aaba0","0bc48f8eab3e4a37a1e5a954e6b63bdb"]},"id":"Zp0J2fYQIy49","executionInfo":{"status":"ok","timestamp":1648400464355,"user_tz":-60,"elapsed":1038,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"d9422292-41eb-45ee-8346-c9a20749a3e1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["              Description             Value\n","0              session_id                42\n","1                  Target            target\n","2             Target Type            Binary\n","3           Label Encoded              None\n","4           Original Data       (10000, 10)\n","5          Missing Values             False\n","6        Numeric Features                 8\n","7    Categorical Features                 1\n","8   Transformed Train Set         (6999, 9)\n","9    Transformed Test Set         (3001, 9)\n","10     Shuffle Train-Test              True\n","11    Stratify Train-Test             False\n","12         Fold Generator   StratifiedKFold\n","13            Fold Number                10\n","14               CPU Jobs                -1\n","15                Use GPU             False\n","16         Log Experiment             False\n","17        Experiment Name  clf-default-name\n","18                    USI              922b\n","19          Fix Imbalance             False\n","20   Fix Imbalance Method             SMOTE"],"text/html":["\n","  <div id=\"df-116ea8cd-a09a-4446-87f7-29d96b124033\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Description</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>session_id</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Target</td>\n","      <td>target</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Target Type</td>\n","      <td>Binary</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Label Encoded</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Original Data</td>\n","      <td>(10000, 10)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Missing Values</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Numeric Features</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Categorical Features</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Transformed Train Set</td>\n","      <td>(6999, 9)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Transformed Test Set</td>\n","      <td>(3001, 9)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Shuffle Train-Test</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Stratify Train-Test</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Fold Generator</td>\n","      <td>StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fold Number</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>CPU Jobs</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Use GPU</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Log Experiment</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Experiment Name</td>\n","      <td>clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>USI</td>\n","      <td>922b</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Fix Imbalance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Fix Imbalance Method</td>\n","      <td>SMOTE</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-116ea8cd-a09a-4446-87f7-29d96b124033')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-116ea8cd-a09a-4446-87f7-29d96b124033 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-116ea8cd-a09a-4446-87f7-29d96b124033');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["# Train the model\n","rf = create_model('rf')\n","tuned_rf = tune_model(rf, optimize = 'Accuracy',early_stopping = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488,"referenced_widgets":["856e0995fef8482183583c0a1d7b00ca","6f921658af844a8e959947f9c91f0b38","df2f233317ae43099df39624915fdde2","3bc13316c36447328ca225ce4ed4a9b0","185a0ec3f76d49d79cef86022cb33233","c53350ee95e94ddc9a13f5e534e62c60"]},"id":"_PbXVRrCJb4i","executionInfo":{"status":"ok","timestamp":1648400589803,"user_tz":-60,"elapsed":119913,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"1cc48cb6-f5ba-4451-a7bf-cc3b60add2ce"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["             Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC\n","Split  Fold                                                          \n","CV-Val 0       0.8243  0.8442  0.2628  0.6207  0.3692  0.2861  0.3220\n","       1       0.8343  0.8559  0.2701  0.6981  0.3895  0.3146  0.3624\n","       2       0.8257  0.8462  0.2628  0.6316  0.3711  0.2894  0.3271\n","       3       0.8129  0.8211  0.1971  0.5625  0.2919  0.2118  0.2508\n","       4       0.8229  0.8626  0.2044  0.6512  0.3111  0.2400  0.2937\n","       5       0.8129  0.8176  0.1884  0.5778  0.2842  0.2073  0.2508\n","       6       0.8329  0.8419  0.2681  0.6981  0.3874  0.3122  0.3604\n","       7       0.8200  0.8541  0.2319  0.6154  0.3368  0.2566  0.2978\n","       8       0.8314  0.8155  0.3043  0.6562  0.4158  0.3324  0.3661\n","       9       0.8212  0.8128  0.2774  0.5938  0.3781  0.2894  0.3181\n","       Mean    0.8238  0.8372  0.2467  0.6305  0.3535  0.2740  0.3149\n","       Std     0.0072  0.0177  0.0370  0.0439  0.0426  0.0411  0.0401\n","Train  NaN     0.8630  0.9084  0.3617  0.8584  0.5090  0.4443  0.5006"],"text/html":["\n","  <div id=\"df-f9a1ce69-d273-4d42-99b2-6a44f3cb9ca9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Accuracy</th>\n","      <th>AUC</th>\n","      <th>Recall</th>\n","      <th>Prec.</th>\n","      <th>F1</th>\n","      <th>Kappa</th>\n","      <th>MCC</th>\n","    </tr>\n","    <tr>\n","      <th>Split</th>\n","      <th>Fold</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">CV-Val</th>\n","      <th>0</th>\n","      <td>0.8243</td>\n","      <td>0.8442</td>\n","      <td>0.2628</td>\n","      <td>0.6207</td>\n","      <td>0.3692</td>\n","      <td>0.2861</td>\n","      <td>0.3220</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.8343</td>\n","      <td>0.8559</td>\n","      <td>0.2701</td>\n","      <td>0.6981</td>\n","      <td>0.3895</td>\n","      <td>0.3146</td>\n","      <td>0.3624</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.8257</td>\n","      <td>0.8462</td>\n","      <td>0.2628</td>\n","      <td>0.6316</td>\n","      <td>0.3711</td>\n","      <td>0.2894</td>\n","      <td>0.3271</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.8129</td>\n","      <td>0.8211</td>\n","      <td>0.1971</td>\n","      <td>0.5625</td>\n","      <td>0.2919</td>\n","      <td>0.2118</td>\n","      <td>0.2508</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.8229</td>\n","      <td>0.8626</td>\n","      <td>0.2044</td>\n","      <td>0.6512</td>\n","      <td>0.3111</td>\n","      <td>0.2400</td>\n","      <td>0.2937</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.8129</td>\n","      <td>0.8176</td>\n","      <td>0.1884</td>\n","      <td>0.5778</td>\n","      <td>0.2842</td>\n","      <td>0.2073</td>\n","      <td>0.2508</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.8329</td>\n","      <td>0.8419</td>\n","      <td>0.2681</td>\n","      <td>0.6981</td>\n","      <td>0.3874</td>\n","      <td>0.3122</td>\n","      <td>0.3604</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.8200</td>\n","      <td>0.8541</td>\n","      <td>0.2319</td>\n","      <td>0.6154</td>\n","      <td>0.3368</td>\n","      <td>0.2566</td>\n","      <td>0.2978</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.8314</td>\n","      <td>0.8155</td>\n","      <td>0.3043</td>\n","      <td>0.6562</td>\n","      <td>0.4158</td>\n","      <td>0.3324</td>\n","      <td>0.3661</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.8212</td>\n","      <td>0.8128</td>\n","      <td>0.2774</td>\n","      <td>0.5938</td>\n","      <td>0.3781</td>\n","      <td>0.2894</td>\n","      <td>0.3181</td>\n","    </tr>\n","    <tr>\n","      <th>Mean</th>\n","      <td>0.8238</td>\n","      <td>0.8372</td>\n","      <td>0.2467</td>\n","      <td>0.6305</td>\n","      <td>0.3535</td>\n","      <td>0.2740</td>\n","      <td>0.3149</td>\n","    </tr>\n","    <tr>\n","      <th>Std</th>\n","      <td>0.0072</td>\n","      <td>0.0177</td>\n","      <td>0.0370</td>\n","      <td>0.0439</td>\n","      <td>0.0426</td>\n","      <td>0.0411</td>\n","      <td>0.0401</td>\n","    </tr>\n","    <tr>\n","      <th>Train</th>\n","      <th>NaN</th>\n","      <td>0.8630</td>\n","      <td>0.9084</td>\n","      <td>0.3617</td>\n","      <td>0.8584</td>\n","      <td>0.5090</td>\n","      <td>0.4443</td>\n","      <td>0.5006</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9a1ce69-d273-4d42-99b2-6a44f3cb9ca9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f9a1ce69-d273-4d42-99b2-6a44f3cb9ca9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f9a1ce69-d273-4d42-99b2-6a44f3cb9ca9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["interpret_model(rf,plot='summary')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"X_i2jrtPJb18","executionInfo":{"status":"ok","timestamp":1648400815208,"user_tz":-60,"elapsed":116119,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"ab9d1f08-fc55-45ee-f471-89c64ee07538"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x367.2 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Appendix\n"],"metadata":{"id":"1ovK9-3zIuWG"}},{"cell_type":"code","source":["index_dead = list((target==1).index)\n","index_live = (target==0).index\n"],"metadata":{"id":"1eZh308F_4wQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test=data_final.copy()\n","test['target']=target\n","test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Ytv_391IBFeg","executionInfo":{"status":"ok","timestamp":1648397035523,"user_tz":-60,"elapsed":213,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"f9efc741-90ff-4a1f-8d3f-90687f106fc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           gender  anchor_age  anchor_year  temperature  heartrate  resprate  \\\n","subject_id                                                                     \n","10000032        0    0.246815     1.206029    -0.060682  -0.179865 -0.036234   \n","10000084        1    1.224054     0.355922    -0.096181  -0.238606 -0.036234   \n","10000108        1   -1.072456     0.483438     0.028065  -0.943509 -0.064109   \n","10000115        1   -1.121318     0.100890    -0.078431  -0.062381  0.019516   \n","10000117        0    0.051368     0.950997    -0.078431  -0.062381 -0.036234   \n","...           ...         ...          ...          ...        ...       ...   \n","19999636        0   -1.316766     1.461061    -0.255925  -0.121123 -0.036234   \n","19999750        1   -0.095218    -0.324164    -0.060682   0.407554  0.131015   \n","19999784        1    0.491125    -1.386797     0.099063  -0.121123  0.019516   \n","19999828        0   -0.046356    -0.196648     0.010316   0.055103  0.019516   \n","19999914        0    0.100230     0.270911     0.258807  -0.062381 -0.203483   \n","\n","               o2sat       sbp       dbp target  \n","subject_id                                       \n","10000032   -0.058041 -1.185107 -0.122444      0  \n","10000084    0.170691 -0.851276 -0.049996      0  \n","10000108    0.170691 -0.994347 -0.109271      0  \n","10000115    0.056325 -0.565136 -0.049996      0  \n","10000117    0.170691  0.770189  0.029037      0  \n","...              ...       ...       ...    ...  \n","19999636    0.170691 -0.374375  0.002693      0  \n","19999750    0.170691  2.105513  0.200277      0  \n","19999784    0.170691  1.390161  0.141002      0  \n","19999828    0.170691 -1.185107 -0.023652      0  \n","19999914    0.170691 -1.852770 -0.155374      0  \n","\n","[156338 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-dce4acb1-9891-4803-8f1e-1b1e0b00f722\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>temperature</th>\n","      <th>heartrate</th>\n","      <th>resprate</th>\n","      <th>o2sat</th>\n","      <th>sbp</th>\n","      <th>dbp</th>\n","      <th>target</th>\n","    </tr>\n","    <tr>\n","      <th>subject_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10000032</th>\n","      <td>0</td>\n","      <td>0.246815</td>\n","      <td>1.206029</td>\n","      <td>-0.060682</td>\n","      <td>-0.179865</td>\n","      <td>-0.036234</td>\n","      <td>-0.058041</td>\n","      <td>-1.185107</td>\n","      <td>-0.122444</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10000084</th>\n","      <td>1</td>\n","      <td>1.224054</td>\n","      <td>0.355922</td>\n","      <td>-0.096181</td>\n","      <td>-0.238606</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>-0.851276</td>\n","      <td>-0.049996</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10000108</th>\n","      <td>1</td>\n","      <td>-1.072456</td>\n","      <td>0.483438</td>\n","      <td>0.028065</td>\n","      <td>-0.943509</td>\n","      <td>-0.064109</td>\n","      <td>0.170691</td>\n","      <td>-0.994347</td>\n","      <td>-0.109271</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10000115</th>\n","      <td>1</td>\n","      <td>-1.121318</td>\n","      <td>0.100890</td>\n","      <td>-0.078431</td>\n","      <td>-0.062381</td>\n","      <td>0.019516</td>\n","      <td>0.056325</td>\n","      <td>-0.565136</td>\n","      <td>-0.049996</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10000117</th>\n","      <td>0</td>\n","      <td>0.051368</td>\n","      <td>0.950997</td>\n","      <td>-0.078431</td>\n","      <td>-0.062381</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>0.770189</td>\n","      <td>0.029037</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19999636</th>\n","      <td>0</td>\n","      <td>-1.316766</td>\n","      <td>1.461061</td>\n","      <td>-0.255925</td>\n","      <td>-0.121123</td>\n","      <td>-0.036234</td>\n","      <td>0.170691</td>\n","      <td>-0.374375</td>\n","      <td>0.002693</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19999750</th>\n","      <td>1</td>\n","      <td>-0.095218</td>\n","      <td>-0.324164</td>\n","      <td>-0.060682</td>\n","      <td>0.407554</td>\n","      <td>0.131015</td>\n","      <td>0.170691</td>\n","      <td>2.105513</td>\n","      <td>0.200277</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19999784</th>\n","      <td>1</td>\n","      <td>0.491125</td>\n","      <td>-1.386797</td>\n","      <td>0.099063</td>\n","      <td>-0.121123</td>\n","      <td>0.019516</td>\n","      <td>0.170691</td>\n","      <td>1.390161</td>\n","      <td>0.141002</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19999828</th>\n","      <td>0</td>\n","      <td>-0.046356</td>\n","      <td>-0.196648</td>\n","      <td>0.010316</td>\n","      <td>0.055103</td>\n","      <td>0.019516</td>\n","      <td>0.170691</td>\n","      <td>-1.185107</td>\n","      <td>-0.023652</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19999914</th>\n","      <td>0</td>\n","      <td>0.100230</td>\n","      <td>0.270911</td>\n","      <td>0.258807</td>\n","      <td>-0.062381</td>\n","      <td>-0.203483</td>\n","      <td>0.170691</td>\n","      <td>-1.852770</td>\n","      <td>-0.155374</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>156338 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dce4acb1-9891-4803-8f1e-1b1e0b00f722')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dce4acb1-9891-4803-8f1e-1b1e0b00f722 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dce4acb1-9891-4803-8f1e-1b1e0b00f722');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["automl_data.to_csv('ml.csv')"],"metadata":{"id":"kK075JBhBYQz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install --use-deprecated=legacy-resolver pycaret[full]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"CFZ0ORolDxyM","executionInfo":{"status":"ok","timestamp":1648396812154,"user_tz":-60,"elapsed":172392,"user":{"displayName":"Jianzhang Ni","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18109982546966884557"}},"outputId":"14103af1-925c-4aaf-cbef-1fd61ce4f6fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pycaret[full]\n","  Downloading pycaret-2.3.8-py3-none-any.whl (318 kB)\n","\u001b[K     |████████████████████████████████| 318 kB 8.0 MB/s \n","\u001b[?25hRequirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (0.11.2)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (3.2.5)\n","Collecting Boruta\n","  Downloading Boruta-0.3-py3-none-any.whl (56 kB)\n","\u001b[K     |████████████████████████████████| 56 kB 4.0 MB/s \n","\u001b[?25hCollecting umap-learn\n","  Downloading umap-learn-0.5.2.tar.gz (86 kB)\n","\u001b[K     |████████████████████████████████| 86 kB 5.2 MB/s \n","\u001b[?25hRequirement already satisfied: textblob in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (0.15.3)\n","Collecting lightgbm>=2.3.1\n","  Downloading lightgbm-3.3.2-py3-none-manylinux1_x86_64.whl (2.0 MB)\n","\u001b[K     |████████████████████████████████| 2.0 MB 36.9 MB/s \n","\u001b[?25hCollecting pandas-profiling>=2.8.0\n","  Downloading pandas_profiling-3.1.0-py2.py3-none-any.whl (261 kB)\n","\u001b[K     |████████████████████████████████| 261 kB 49.0 MB/s \n","\u001b[?25hRequirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (1.1.0)\n","Requirement already satisfied: plotly>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (5.5.0)\n","Requirement already satisfied: cufflinks>=0.17.0 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (0.17.3)\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (7.7.0)\n","Requirement already satisfied: yellowbrick>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (1.4)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (3.2.2)\n","Collecting kmodes>=0.10.1\n","  Downloading kmodes-0.11.1-py2.py3-none-any.whl (19 kB)\n","Requirement already satisfied: wordcloud in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (1.5.0)\n","Requirement already satisfied: scipy<=1.5.4 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (1.4.1)\n","Collecting scikit-plot\n","  Downloading scikit_plot-0.3.7-py3-none-any.whl (33 kB)\n","Requirement already satisfied: gensim<4.0.0 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (3.6.0)\n","Requirement already satisfied: pyyaml<6.0.0 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (3.13)\n","Requirement already satisfied: spacy<2.4.0 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (2.2.4)\n","Requirement already satisfied: IPython in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (5.5.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (1.3.5)\n","Collecting pyLDAvis\n","  Downloading pyLDAvis-3.3.1.tar.gz (1.7 MB)\n","\u001b[K     |████████████████████████████████| 1.7 MB 49.5 MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Collecting mlflow\n","  Downloading mlflow-1.24.0-py3-none-any.whl (16.5 MB)\n","\u001b[K     |████████████████████████████████| 16.5 MB 44.7 MB/s \n","\u001b[?25hCollecting imbalanced-learn==0.7.0\n","  Downloading imbalanced_learn-0.7.0-py3-none-any.whl (167 kB)\n","\u001b[K     |████████████████████████████████| 167 kB 69.1 MB/s \n","\u001b[?25hRequirement already satisfied: numba<0.55 in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (0.51.2)\n","Collecting pyod\n","  Downloading pyod-0.9.8.tar.gz (114 kB)\n","\u001b[K     |████████████████████████████████| 114 kB 66.5 MB/s \n","\u001b[?25hCollecting mlxtend>=0.17.0\n","  Downloading mlxtend-0.19.0-py2.py3-none-any.whl (1.3 MB)\n","\u001b[K     |████████████████████████████████| 1.3 MB 53.2 MB/s \n","\u001b[?25hCollecting scikit-learn==0.23.2\n","  Downloading scikit_learn-0.23.2-cp37-cp37m-manylinux1_x86_64.whl (6.8 MB)\n","\u001b[K     |████████████████████████████████| 6.8 MB 49.1 MB/s \n","\u001b[?25hCollecting fugue>=0.6.5; extra == \"full\"\n","  Downloading fugue-0.6.5-py3-none-any.whl (442 kB)\n","\u001b[K     |████████████████████████████████| 442 kB 52.1 MB/s \n","\u001b[?25hCollecting autoviz; extra == \"full\"\n","  Downloading autoviz-0.1.36-py3-none-any.whl (59 kB)\n","\u001b[K     |████████████████████████████████| 59 kB 5.9 MB/s \n","\u001b[?25hCollecting uvicorn; extra == \"full\"\n","  Downloading uvicorn-0.17.6-py3-none-any.whl (53 kB)\n","\u001b[K     |████████████████████████████████| 53 kB 1.7 MB/s \n","\u001b[?25hCollecting ray[tune]>=1.0.0; extra == \"full\"\n","  Downloading ray-1.11.0-cp37-cp37m-manylinux2014_x86_64.whl (52.7 MB)\n","\u001b[K     |████████████████████████████████| 52.7 MB 60 kB/s \n","\u001b[?25hCollecting fastapi; extra == \"full\"\n","  Downloading fastapi-0.75.0-py3-none-any.whl (54 kB)\n","\u001b[K     |████████████████████████████████| 54 kB 2.3 MB/s \n","\u001b[?25hCollecting interpret<=0.2.4; extra == \"full\"\n","  Downloading interpret-0.2.4-py3-none-any.whl (1.4 kB)\n","Requirement already satisfied: hyperopt; extra == \"full\" in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (0.1.2)\n","Collecting explainerdashboard; extra == \"full\"\n","  Downloading explainerdashboard-0.3.8-py3-none-any.whl (305 kB)\n","\u001b[K     |████████████████████████████████| 305 kB 54.6 MB/s \n","\u001b[?25hCollecting xgboost>=1.1.0; extra == \"full\"\n","  Downloading xgboost-1.5.2-py3-none-manylinux2014_x86_64.whl (173.6 MB)\n","\u001b[K     |████████████████████████████████| 173.6 MB 7.0 kB/s \n","\u001b[?25hCollecting gradio; extra == \"full\"\n","  Downloading gradio-2.8.14-py3-none-any.whl (668 kB)\n","\u001b[K     |████████████████████████████████| 668 kB 53.4 MB/s \n","\u001b[?25hCollecting azure-storage-blob; extra == \"full\"\n","  Downloading azure_storage_blob-12.10.0-py3-none-any.whl (346 kB)\n","\u001b[K     |████████████████████████████████| 346 kB 50.8 MB/s \n","\u001b[?25hCollecting evidently; extra == \"full\"\n","  Downloading evidently-0.1.47.dev1-py3-none-any.whl (11.8 MB)\n","\u001b[K     |████████████████████████████████| 11.8 MB 39.4 MB/s \n","\u001b[?25hCollecting m2cgen; extra == \"full\"\n","  Downloading m2cgen-0.9.0-py3-none-any.whl (73 kB)\n","\u001b[K     |████████████████████████████████| 73 kB 2.1 MB/s \n","\u001b[?25hCollecting boto3; extra == \"full\"\n","  Downloading boto3-1.21.27-py3-none-any.whl (132 kB)\n","\u001b[K     |████████████████████████████████| 132 kB 73.8 MB/s \n","\u001b[?25hCollecting tune-sklearn>=0.2.1; extra == \"full\"\n","  Downloading tune_sklearn-0.4.1-py3-none-any.whl (40 kB)\n","\u001b[K     |████████████████████████████████| 40 kB 4.8 MB/s \n","\u001b[?25hRequirement already satisfied: psutil; extra == \"full\" in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (5.4.8)\n","Requirement already satisfied: google-cloud-storage; extra == \"full\" in /usr/local/lib/python3.7/dist-packages (from pycaret[full]) (1.18.1)\n","Collecting scikit-optimize>=0.8.1; extra == \"full\"\n","  Downloading scikit_optimize-0.9.0-py2.py3-none-any.whl (100 kB)\n","\u001b[K     |████████████████████████████████| 100 kB 7.9 MB/s \n","\u001b[?25hCollecting shap; extra == \"full\"\n","  Downloading shap-0.40.0-cp37-cp37m-manylinux2010_x86_64.whl (564 kB)\n","\u001b[K     |████████████████████████████████| 564 kB 21.2 MB/s \n","\u001b[?25hCollecting fairlearn; extra == \"full\"\n","  Downloading fairlearn-0.7.0-py3-none-any.whl (177 kB)\n","\u001b[K     |████████████████████████████████| 177 kB 50.8 MB/s \n","\u001b[?25hCollecting optuna>=2.2.0; extra == \"full\"\n","  Downloading optuna-2.10.0-py3-none-any.whl (308 kB)\n","\u001b[K     |████████████████████████████████| 308 kB 55.5 MB/s \n","\u001b[?25hCollecting catboost>=0.23.2; extra == \"full\"\n","  Downloading catboost-1.0.4-cp37-none-manylinux1_x86_64.whl (76.1 MB)\n","\u001b[K     |████████████████████████████████| 76.1 MB 1.4 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from seaborn->pycaret[full]) (1.21.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk->pycaret[full]) (1.15.0)\n","Collecting pynndescent>=0.5\n","  Downloading pynndescent-0.5.6.tar.gz (1.1 MB)\n","\u001b[K     |████████████████████████████████| 1.1 MB 46.1 MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from umap-learn->pycaret[full]) (4.63.0)\n","Requirement already satisfied: wheel in /usr/local/lib/python3.7/dist-packages (from lightgbm>=2.3.1->pycaret[full]) (0.37.1)\n","Collecting visions[type_image_path]==0.7.4\n","  Downloading visions-0.7.4-py3-none-any.whl (102 kB)\n","\u001b[K     |████████████████████████████████| 102 kB 11.1 MB/s \n","\u001b[?25hCollecting phik>=0.11.1\n","  Downloading phik-0.12.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (690 kB)\n","\u001b[K     |████████████████████████████████| 690 kB 49.0 MB/s \n","\u001b[?25hRequirement already satisfied: markupsafe~=2.0.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret[full]) (2.0.1)\n","Requirement already satisfied: missingno>=0.4.2 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret[full]) (0.5.1)\n","Collecting htmlmin>=0.1.12\n","  Downloading htmlmin-0.1.12.tar.gz (19 kB)\n","Collecting pydantic>=1.8.1\n","  Downloading pydantic-1.9.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (10.9 MB)\n","\u001b[K     |████████████████████████████████| 10.9 MB 63.9 MB/s \n","\u001b[?25hCollecting tangled-up-in-unicode==0.1.0\n","  Downloading tangled_up_in_unicode-0.1.0-py3-none-any.whl (3.1 MB)\n","\u001b[K     |████████████████████████████████| 3.1 MB 51.7 MB/s \n","\u001b[?25hCollecting requests>=2.24.0\n","  Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n","\u001b[K     |████████████████████████████████| 63 kB 1.5 MB/s \n","\u001b[?25hCollecting multimethod>=1.4\n","  Downloading multimethod-1.7-py3-none-any.whl (9.5 kB)\n","Requirement already satisfied: jinja2>=2.11.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret[full]) (2.11.3)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from plotly>=4.4.1->pycaret[full]) (8.0.1)\n","Requirement already satisfied: colorlover>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from cufflinks>=0.17.0->pycaret[full]) (0.3.0)\n","Requirement already satisfied: setuptools>=34.4.1 in /usr/local/lib/python3.7/dist-packages (from cufflinks>=0.17.0->pycaret[full]) (57.4.0)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret[full]) (4.10.1)\n","Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret[full]) (5.1.1)\n","Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret[full]) (5.2.0)\n","Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret[full]) (3.6.0)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret[full]) (1.1.0)\n","Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret[full]) (0.2.0)\n","Requirement already satisfied: cycler>=0.10.0 in /usr/local/lib/python3.7/dist-packages (from yellowbrick>=1.0.1->pycaret[full]) (0.11.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret[full]) (2.8.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret[full]) (3.0.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret[full]) (1.4.0)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from wordcloud->pycaret[full]) (7.1.2)\n","Requirement already satisfied: smart-open>=1.2.1 in /usr/local/lib/python3.7/dist-packages (from gensim<4.0.0->pycaret[full]) (5.2.1)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (2.0.6)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (7.4.0)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (3.0.6)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (1.0.0)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (1.1.3)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (1.0.5)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (1.0.6)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (0.9.0)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret[full]) (0.4.1)\n","Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret[full]) (4.8.0)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret[full]) (1.0.18)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret[full]) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret[full]) (0.7.5)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret[full]) (0.8.1)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret[full]) (2.6.1)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas->pycaret[full]) (2018.9)\n","Requirement already satisfied: numexpr in /usr/local/lib/python3.7/dist-packages (from pyLDAvis->pycaret[full]) (2.8.1)\n","Collecting funcy\n","  Downloading funcy-1.17-py2.py3-none-any.whl (33 kB)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from pyLDAvis->pycaret[full]) (0.16.0)\n","Requirement already satisfied: sklearn in /usr/local/lib/python3.7/dist-packages (from pyLDAvis->pycaret[full]) (0.0)\n","Collecting alembic\n","  Downloading alembic-1.7.7-py3-none-any.whl (210 kB)\n","\u001b[K     |████████████████████████████████| 210 kB 68.3 MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata!=4.7.0,>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (4.11.3)\n","Requirement already satisfied: Flask in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (1.1.4)\n","Collecting docker>=4.0.0\n","  Downloading docker-5.0.3-py2.py3-none-any.whl (146 kB)\n","\u001b[K     |████████████████████████████████| 146 kB 57.2 MB/s \n","\u001b[?25hRequirement already satisfied: sqlalchemy in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (1.4.32)\n","Collecting databricks-cli>=0.8.7\n","  Downloading databricks-cli-0.16.4.tar.gz (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 5.7 MB/s \n","\u001b[?25hRequirement already satisfied: protobuf>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (3.17.3)\n","Collecting gunicorn; platform_system != \"Windows\"\n","  Downloading gunicorn-20.1.0-py3-none-any.whl (79 kB)\n","\u001b[K     |████████████████████████████████| 79 kB 8.0 MB/s \n","\u001b[?25hCollecting querystring-parser\n","  Downloading querystring_parser-1.2.4-py2.py3-none-any.whl (7.9 kB)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (21.3)\n","Requirement already satisfied: entrypoints in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (0.4)\n","Requirement already satisfied: sqlparse>=0.3.1 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (0.4.2)\n","Requirement already satisfied: cloudpickle in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (1.3.0)\n","Collecting prometheus-flask-exporter\n","  Downloading prometheus_flask_exporter-0.19.0-py3-none-any.whl (18 kB)\n","Collecting gitpython>=2.1.0\n","  Downloading GitPython-3.1.27-py3-none-any.whl (181 kB)\n","\u001b[K     |████████████████████████████████| 181 kB 44.6 MB/s \n","\u001b[?25hRequirement already satisfied: click>=7.0 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret[full]) (7.1.2)\n","Requirement already satisfied: llvmlite<0.35,>=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba<0.55->pycaret[full]) (0.34.0)\n","Requirement already satisfied: statsmodels in /usr/local/lib/python3.7/dist-packages (from pyod->pycaret[full]) (0.10.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn==0.23.2->pycaret[full]) (3.1.0)\n","Collecting qpd>=0.2.6\n","  Downloading qpd-0.2.6-py3-none-any.whl (194 kB)\n","\u001b[K     |████████████████████████████████| 194 kB 54.1 MB/s \n","\u001b[?25hCollecting triad>=0.6.0\n","  Downloading triad-0.6.0-py3-none-any.whl (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 5.4 MB/s \n","\u001b[?25hCollecting adagio>=0.2.3\n","  Downloading adagio-0.2.3-py3-none-any.whl (26 kB)\n","Requirement already satisfied: pyarrow>=0.15.1 in /usr/local/lib/python3.7/dist-packages (from fugue>=0.6.5; extra == \"full\"->pycaret[full]) (6.0.1)\n","Collecting panel==0.12.6\n","  Downloading panel-0.12.6-py2.py3-none-any.whl (12.9 MB)\n","\u001b[K     |████████████████████████████████| 12.9 MB 49.1 MB/s \n","\u001b[?25hCollecting emoji\n","  Downloading emoji-1.7.0.tar.gz (175 kB)\n","\u001b[K     |████████████████████████████████| 175 kB 61.5 MB/s \n","\u001b[?25hCollecting holoviews==1.14.6\n","  Downloading holoviews-1.14.6-py3-none-any.whl (4.3 MB)\n","\u001b[K     |████████████████████████████████| 4.3 MB 42.6 MB/s \n","\u001b[?25hRequirement already satisfied: jupyter in /usr/local/lib/python3.7/dist-packages (from autoviz; extra == \"full\"->pycaret[full]) (1.0.0)\n","Collecting bokeh==2.4.2\n","  Downloading bokeh-2.4.2-py3-none-any.whl (18.5 MB)\n","\u001b[K     |████████████████████████████████| 18.5 MB 1.2 MB/s \n","\u001b[?25hRequirement already satisfied: xlrd in /usr/local/lib/python3.7/dist-packages (from autoviz; extra == \"full\"->pycaret[full]) (1.1.0)\n","Collecting fsspec==0.8.3\n","  Downloading fsspec-0.8.3-py3-none-any.whl (88 kB)\n","\u001b[K     |████████████████████████████████| 88 kB 7.3 MB/s \n","\u001b[?25hCollecting hvplot==0.7.3\n","  Downloading hvplot-0.7.3-py2.py3-none-any.whl (3.1 MB)\n","\u001b[K     |████████████████████████████████| 3.1 MB 36.9 MB/s \n","\u001b[?25hCollecting h11>=0.8\n","  Downloading h11-0.13.0-py3-none-any.whl (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 4.3 MB/s \n","\u001b[?25hCollecting asgiref>=3.4.0\n","  Downloading asgiref-3.5.0-py3-none-any.whl (22 kB)\n","Requirement already satisfied: typing-extensions; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from uvicorn; extra == \"full\"->pycaret[full]) (3.10.0.2)\n","Requirement already satisfied: jsonschema in /usr/local/lib/python3.7/dist-packages (from ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (4.3.3)\n","Collecting redis>=3.5.0\n","  Downloading redis-4.2.0-py3-none-any.whl (225 kB)\n","\u001b[K     |████████████████████████████████| 225 kB 73.9 MB/s \n","\u001b[?25hCollecting grpcio<=1.43.0,>=1.28.1\n","  Downloading grpcio-1.43.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.1 MB)\n","\u001b[K     |████████████████████████████████| 4.1 MB 43.4 MB/s \n","\u001b[?25hRequirement already satisfied: msgpack<2.0.0,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (1.0.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (3.6.0)\n","Requirement already satisfied: attrs in /usr/local/lib/python3.7/dist-packages (from ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (21.4.0)\n","Requirement already satisfied: tabulate; extra == \"tune\" in /usr/local/lib/python3.7/dist-packages (from ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (0.8.9)\n","Collecting tensorboardX>=1.9; extra == \"tune\"\n","  Downloading tensorboardX-2.5-py2.py3-none-any.whl (125 kB)\n","\u001b[K     |████████████████████████████████| 125 kB 67.7 MB/s \n","\u001b[?25hCollecting starlette==0.17.1\n","  Downloading starlette-0.17.1-py3-none-any.whl (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 5.5 MB/s \n","\u001b[?25hCollecting interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]>=0.2.4\n","  Downloading interpret_core-0.2.7-py3-none-any.whl (6.6 MB)\n","\u001b[K     |████████████████████████████████| 6.6 MB 48.7 MB/s \n","\u001b[?25hRequirement already satisfied: pymongo in /usr/local/lib/python3.7/dist-packages (from hyperopt; extra == \"full\"->pycaret[full]) (4.0.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from hyperopt; extra == \"full\"->pycaret[full]) (2.6.3)\n","Collecting dash-auth\n","  Downloading dash_auth-1.4.1.tar.gz (470 kB)\n","\u001b[K     |████████████████████████████████| 470 kB 48.5 MB/s \n","\u001b[?25hCollecting dtreeviz>=1.3\n","  Downloading dtreeviz-1.3.5.tar.gz (61 kB)\n","\u001b[K     |████████████████████████████████| 61 kB 179 kB/s \n","\u001b[?25hCollecting orjson\n","  Downloading orjson-3.6.7-cp37-cp37m-manylinux_2_24_x86_64.whl (255 kB)\n","\u001b[K     |████████████████████████████████| 255 kB 45.5 MB/s \n","\u001b[?25hCollecting oyaml\n","  Downloading oyaml-1.0-py2.py3-none-any.whl (3.0 kB)\n","Collecting waitress\n","  Downloading waitress-2.1.1-py3-none-any.whl (57 kB)\n","\u001b[K     |████████████████████████████████| 57 kB 4.5 MB/s \n","\u001b[?25hCollecting dash>=2\n","  Downloading dash-2.3.0-py3-none-any.whl (9.6 MB)\n","\u001b[K     |████████████████████████████████| 9.6 MB 52.9 MB/s \n","\u001b[?25hCollecting flask-simplelogin\n","  Downloading flask_simplelogin-0.1.1-py3-none-any.whl (7.2 kB)\n","Collecting dash-bootstrap-components<1\n","  Downloading dash_bootstrap_components-0.13.1-py3-none-any.whl (197 kB)\n","\u001b[K     |████████████████████████████████| 197 kB 61.0 MB/s \n","\u001b[?25hCollecting jupyter-dash\n","  Downloading jupyter_dash-0.4.1-py3-none-any.whl (17 kB)\n","Collecting python-multipart\n","  Downloading python-multipart-0.0.5.tar.gz (32 kB)\n","Collecting ffmpy\n","  Downloading ffmpy-0.3.0.tar.gz (4.8 kB)\n","Collecting pycryptodome\n","  Downloading pycryptodome-3.14.1-cp35-abi3-manylinux2010_x86_64.whl (2.0 MB)\n","\u001b[K     |████████████████████████████████| 2.0 MB 51.2 MB/s \n","\u001b[?25hCollecting paramiko\n","  Downloading paramiko-2.10.3-py2.py3-none-any.whl (211 kB)\n","\u001b[K     |████████████████████████████████| 211 kB 53.2 MB/s \n","\u001b[?25hCollecting markdown-it-py[linkify,plugins]\n","  Downloading markdown_it_py-2.0.1-py3-none-any.whl (84 kB)\n","\u001b[K     |████████████████████████████████| 84 kB 2.7 MB/s \n","\u001b[?25hCollecting pydub\n","  Downloading pydub-0.25.1-py2.py3-none-any.whl (32 kB)\n","Collecting aiohttp\n","  Downloading aiohttp-3.8.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n","\u001b[K     |████████████████████████████████| 1.1 MB 51.8 MB/s \n","\u001b[?25hCollecting analytics-python\n","  Downloading analytics_python-1.4.0-py2.py3-none-any.whl (15 kB)\n","Collecting msrest>=0.6.21\n","  Downloading msrest-0.6.21-py2.py3-none-any.whl (85 kB)\n","\u001b[K     |████████████████████████████████| 85 kB 3.7 MB/s \n","\u001b[?25hCollecting azure-core<2.0.0,>=1.15.0\n","  Downloading azure_core-1.23.0-py3-none-any.whl (179 kB)\n","\u001b[K     |████████████████████████████████| 179 kB 45.9 MB/s \n","\u001b[?25hCollecting cryptography>=2.1.4\n","  Downloading cryptography-36.0.2-cp36-abi3-manylinux_2_24_x86_64.whl (3.6 MB)\n","\u001b[K     |████████████████████████████████| 3.6 MB 54.2 MB/s \n","\u001b[?25hCollecting dataclasses>=0.6\n","  Downloading dataclasses-0.6-py3-none-any.whl (14 kB)\n","Collecting s3transfer<0.6.0,>=0.5.0\n","  Downloading s3transfer-0.5.2-py3-none-any.whl (79 kB)\n","\u001b[K     |████████████████████████████████| 79 kB 7.9 MB/s \n","\u001b[?25hCollecting botocore<1.25.0,>=1.24.27\n","  Downloading botocore-1.24.27-py3-none-any.whl (8.6 MB)\n","\u001b[K     |████████████████████████████████| 8.6 MB 42.8 MB/s \n","\u001b[?25hCollecting jmespath<2.0.0,>=0.7.1\n","  Downloading jmespath-1.0.0-py3-none-any.whl (23 kB)\n","Requirement already satisfied: google-resumable-media<0.5.0dev,>=0.3.1 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage; extra == \"full\"->pycaret[full]) (0.4.1)\n","Requirement already satisfied: google-cloud-core<2.0dev,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage; extra == \"full\"->pycaret[full]) (1.0.3)\n","Requirement already satisfied: google-auth>=1.2.0 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage; extra == \"full\"->pycaret[full]) (1.35.0)\n","Collecting pyaml>=16.9\n","  Downloading pyaml-21.10.1-py2.py3-none-any.whl (24 kB)\n","Collecting slicer==0.0.7\n","  Downloading slicer-0.0.7-py3-none-any.whl (14 kB)\n","Collecting colorlog\n","  Downloading colorlog-6.6.0-py2.py3-none-any.whl (11 kB)\n","Collecting cmaes>=0.8.2\n","  Downloading cmaes-0.8.2-py3-none-any.whl (15 kB)\n","Collecting cliff\n","  Downloading cliff-3.10.1-py3-none-any.whl (81 kB)\n","\u001b[K     |████████████████████████████████| 81 kB 7.8 MB/s \n","\u001b[?25hRequirement already satisfied: graphviz in /usr/local/lib/python3.7/dist-packages (from catboost>=0.23.2; extra == \"full\"->pycaret[full]) (0.10.1)\n","Collecting imagehash; extra == \"type_image_path\"\n","  Downloading ImageHash-4.2.1.tar.gz (812 kB)\n","\u001b[K     |████████████████████████████████| 812 kB 47.8 MB/s \n","\u001b[?25hRequirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret[full]) (1.24.3)\n","Requirement already satisfied: charset-normalizer~=2.0.0; python_version >= \"3\" in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret[full]) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5; python_version >= \"3\" in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret[full]) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret[full]) (2021.10.8)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets->pycaret[full]) (5.3.5)\n","Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets->pycaret[full]) (5.1.1)\n","Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets->pycaret[full]) (4.9.2)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets->pycaret[full]) (5.3.1)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect; sys_platform != \"win32\"->IPython->pycaret[full]) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->IPython->pycaret[full]) (0.2.5)\n","Requirement already satisfied: importlib-resources; python_version < \"3.9\" in /usr/local/lib/python3.7/dist-packages (from alembic->mlflow->pycaret[full]) (5.4.0)\n","Collecting Mako\n","  Downloading Mako-1.2.0-py3-none-any.whl (78 kB)\n","\u001b[K     |████████████████████████████████| 78 kB 6.5 MB/s \n","\u001b[?25hRequirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata!=4.7.0,>=3.7.0->mlflow->pycaret[full]) (3.7.0)\n","Requirement already satisfied: Werkzeug<2.0,>=0.15 in /usr/local/lib/python3.7/dist-packages (from Flask->mlflow->pycaret[full]) (1.0.1)\n","Requirement already satisfied: itsdangerous<2.0,>=0.24 in /usr/local/lib/python3.7/dist-packages (from Flask->mlflow->pycaret[full]) (1.1.0)\n","Collecting websocket-client>=0.32.0\n","  Downloading websocket_client-1.3.1-py3-none-any.whl (54 kB)\n","\u001b[K     |████████████████████████████████| 54 kB 2.7 MB/s \n","\u001b[?25hRequirement already satisfied: greenlet!=0.4.17; python_version >= \"3\" and (platform_machine == \"aarch64\" or (platform_machine == \"ppc64le\" or (platform_machine == \"x86_64\" or (platform_machine == \"amd64\" or (platform_machine == \"AMD64\" or (platform_machine == \"win32\" or platform_machine == \"WIN32\")))))) in /usr/local/lib/python3.7/dist-packages (from sqlalchemy->mlflow->pycaret[full]) (1.1.2)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.7/dist-packages (from prometheus-flask-exporter->mlflow->pycaret[full]) (0.13.1)\n","Collecting gitdb<5,>=4.0.1\n","  Downloading gitdb-4.0.9-py3-none-any.whl (63 kB)\n","\u001b[K     |████████████████████████████████| 63 kB 1.7 MB/s \n","\u001b[?25hRequirement already satisfied: patsy>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from statsmodels->pyod->pycaret[full]) (0.5.2)\n","Collecting antlr4-python3-runtime\n","  Downloading antlr4-python3-runtime-4.9.3.tar.gz (117 kB)\n","\u001b[K     |████████████████████████████████| 117 kB 58.1 MB/s \n","\u001b[?25hCollecting ciso8601; platform_system != \"Windows\"\n","  Downloading ciso8601-2.2.0.tar.gz (18 kB)\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Collecting fs\n","  Downloading fs-2.4.15-py2.py3-none-any.whl (133 kB)\n","\u001b[K     |████████████████████████████████| 133 kB 55.5 MB/s \n","\u001b[?25hRequirement already satisfied: param>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from panel==0.12.6->autoviz; extra == \"full\"->pycaret[full]) (1.12.0)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from panel==0.12.6->autoviz; extra == \"full\"->pycaret[full]) (4.1.0)\n","Requirement already satisfied: pyct>=0.4.4 in /usr/local/lib/python3.7/dist-packages (from panel==0.12.6->autoviz; extra == \"full\"->pycaret[full]) (0.4.8)\n","Requirement already satisfied: markdown in /usr/local/lib/python3.7/dist-packages (from panel==0.12.6->autoviz; extra == \"full\"->pycaret[full]) (3.3.6)\n","Requirement already satisfied: pyviz-comms>=0.7.4 in /usr/local/lib/python3.7/dist-packages (from panel==0.12.6->autoviz; extra == \"full\"->pycaret[full]) (2.1.0)\n","Requirement already satisfied: colorcet in /usr/local/lib/python3.7/dist-packages (from holoviews==1.14.6->autoviz; extra == \"full\"->pycaret[full]) (3.0.0)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from jupyter->autoviz; extra == \"full\"->pycaret[full]) (5.6.1)\n","Requirement already satisfied: qtconsole in /usr/local/lib/python3.7/dist-packages (from jupyter->autoviz; extra == \"full\"->pycaret[full]) (5.2.2)\n","Requirement already satisfied: jupyter-console in /usr/local/lib/python3.7/dist-packages (from jupyter->autoviz; extra == \"full\"->pycaret[full]) (5.2.0)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema->ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (0.18.1)\n","Collecting async-timeout>=4.0.2\n","  Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n","Collecting deprecated>=1.2.3\n","  Downloading Deprecated-1.2.13-py2.py3-none-any.whl (9.6 kB)\n","Collecting anyio<4,>=3.0.0\n","  Downloading anyio-3.5.0-py3-none-any.whl (79 kB)\n","\u001b[K     |████████████████████████████████| 79 kB 6.9 MB/s \n","\u001b[?25hCollecting gevent>=1.3.6; extra == \"dash\"\n","  Downloading gevent-21.12.0-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (5.8 MB)\n","\u001b[K     |████████████████████████████████| 5.8 MB 47.3 MB/s \n","\u001b[?25hCollecting dash-table>=4.1.0; extra == \"dash\"\n","  Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n","Collecting dash-cytoscape>=0.1.1; extra == \"dash\"\n","  Downloading dash_cytoscape-0.3.0-py3-none-any.whl (3.6 MB)\n","\u001b[K     |████████████████████████████████| 3.6 MB 66.2 MB/s \n","\u001b[?25hCollecting lime>=0.1.1.33; extra == \"lime\"\n","  Downloading lime-0.2.0.1.tar.gz (275 kB)\n","\u001b[K     |████████████████████████████████| 275 kB 59.7 MB/s \n","\u001b[?25hCollecting SALib>=1.3.3; extra == \"sensitivity\"\n","  Downloading SALib-1.4.5-py2.py3-none-any.whl (756 kB)\n","\u001b[K     |████████████████████████████████| 756 kB 44.1 MB/s \n","\u001b[?25hRequirement already satisfied: dill>=0.2.5; extra == \"shap\" in /usr/local/lib/python3.7/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]>=0.2.4->interpret<=0.2.4; extra == \"full\"->pycaret[full]) (0.3.4)\n","Collecting skope-rules>=1.0.1; extra == \"skoperules\"\n","  Downloading skope_rules-1.0.1-py3-none-any.whl (14 kB)\n","Collecting treeinterpreter>=0.2.2; extra == \"treeinterpreter\"\n","  Downloading treeinterpreter-0.2.3-py2.py3-none-any.whl (6.0 kB)\n","Collecting chart_studio>=1.0.0\n","  Downloading chart_studio-1.1.0-py3-none-any.whl (64 kB)\n","\u001b[K     |████████████████████████████████| 64 kB 2.1 MB/s \n","\u001b[?25hCollecting flask-compress\n","  Downloading Flask_Compress-1.11-py3-none-any.whl (7.9 kB)\n","Collecting flask-seasurf\n","  Downloading Flask_SeaSurf-0.3.1-py3-none-any.whl (8.1 kB)\n","Collecting retrying\n","  Downloading retrying-1.3.3.tar.gz (10 kB)\n","Collecting ua_parser\n","  Downloading ua_parser-0.10.0-py2.py3-none-any.whl (35 kB)\n","Collecting colour\n","  Downloading colour-0.1.5-py2.py3-none-any.whl (23 kB)\n","Requirement already satisfied: pytest in /usr/local/lib/python3.7/dist-packages (from dtreeviz>=1.3->explainerdashboard; extra == \"full\"->pycaret[full]) (3.6.4)\n","Collecting dash-html-components==2.0.0\n","  Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n","Collecting dash-core-components==2.0.0\n","  Downloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n","Collecting WTForms>=2.1\n","  Downloading WTForms-3.0.1-py3-none-any.whl (136 kB)\n","\u001b[K     |████████████████████████████████| 136 kB 47.6 MB/s \n","\u001b[?25hCollecting Flask-WTF<0.16.0,>=0.15.1\n","  Downloading Flask_WTF-0.15.1-py2.py3-none-any.whl (13 kB)\n","Collecting ansi2html\n","  Downloading ansi2html-1.7.0-py3-none-any.whl (15 kB)\n","Collecting pynacl>=1.0.1\n","  Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)\n","\u001b[K     |████████████████████████████████| 856 kB 56.2 MB/s \n","\u001b[?25hCollecting bcrypt>=3.1.3\n","  Downloading bcrypt-3.2.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (61 kB)\n","\u001b[K     |████████████████████████████████| 61 kB 346 kB/s \n","\u001b[?25hCollecting mdurl~=0.1\n","  Downloading mdurl-0.1.0-py3-none-any.whl (11 kB)\n","Collecting linkify-it-py~=1.0; extra == \"linkify\"\n","  Downloading linkify_it_py-1.0.3-py3-none-any.whl (19 kB)\n","Collecting mdit-py-plugins; extra == \"plugins\"\n","  Downloading mdit_py_plugins-0.3.0-py3-none-any.whl (43 kB)\n","\u001b[K     |████████████████████████████████| 43 kB 1.9 MB/s \n","\u001b[?25hCollecting asynctest==0.13.0; python_version < \"3.8\"\n","  Downloading asynctest-0.13.0-py3-none-any.whl (26 kB)\n","Collecting multidict<7.0,>=4.5\n","  Downloading multidict-6.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (94 kB)\n","\u001b[K     |████████████████████████████████| 94 kB 2.9 MB/s \n","\u001b[?25hCollecting aiosignal>=1.1.2\n","  Downloading aiosignal-1.2.0-py3-none-any.whl (8.2 kB)\n","Collecting frozenlist>=1.1.1\n","  Downloading frozenlist-1.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (144 kB)\n","\u001b[K     |████████████████████████████████| 144 kB 22.9 MB/s \n","\u001b[?25hCollecting yarl<2.0,>=1.0\n","  Downloading yarl-1.7.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (271 kB)\n","\u001b[K     |████████████████████████████████| 271 kB 45.4 MB/s \n","\u001b[?25hCollecting monotonic>=1.5\n","  Downloading monotonic-1.6-py2.py3-none-any.whl (8.2 kB)\n","Collecting backoff==1.10.0\n","  Downloading backoff-1.10.0-py2.py3-none-any.whl (31 kB)\n","Collecting isodate>=0.6.0\n","  Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n","\u001b[K     |████████████████████████████████| 41 kB 547 kB/s \n","\u001b[?25hRequirement already satisfied: requests-oauthlib>=0.5.0 in /usr/local/lib/python3.7/dist-packages (from msrest>=0.6.21->azure-storage-blob; extra == \"full\"->pycaret[full]) (1.3.1)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.7/dist-packages (from cryptography>=2.1.4->azure-storage-blob; extra == \"full\"->pycaret[full]) (1.15.0)\n","Requirement already satisfied: google-api-core<2.0.0dev,>=1.14.0 in /usr/local/lib/python3.7/dist-packages (from google-cloud-core<2.0dev,>=1.0.0->google-cloud-storage; extra == \"full\"->pycaret[full]) (1.26.3)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.2.0->google-cloud-storage; extra == \"full\"->pycaret[full]) (4.2.4)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.2.0->google-cloud-storage; extra == \"full\"->pycaret[full]) (0.2.8)\n","Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.2.0->google-cloud-storage; extra == \"full\"->pycaret[full]) (4.8)\n","Requirement already satisfied: PrettyTable>=0.7.2 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna>=2.2.0; extra == \"full\"->pycaret[full]) (3.2.0)\n","Collecting cmd2>=1.0.0\n","  Downloading cmd2-2.4.0-py3-none-any.whl (150 kB)\n","\u001b[K     |████████████████████████████████| 150 kB 24.6 MB/s \n","\u001b[?25hCollecting autopage>=0.4.0\n","  Downloading autopage-0.5.0-py3-none-any.whl (29 kB)\n","Collecting pbr!=2.1.0,>=2.0.0\n","  Downloading pbr-5.8.1-py2.py3-none-any.whl (113 kB)\n","\u001b[K     |████████████████████████████████| 113 kB 31.7 MB/s \n","\u001b[?25hCollecting stevedore>=2.0.1\n","  Downloading stevedore-3.5.0-py3-none-any.whl (49 kB)\n","\u001b[K     |████████████████████████████████| 49 kB 2.9 MB/s \n","\u001b[?25hRequirement already satisfied: PyWavelets in /usr/local/lib/python3.7/dist-packages (from imagehash; extra == \"type_image_path\"->visions[type_image_path]==0.7.4->pandas-profiling>=2.8.0->pycaret[full]) (1.3.0)\n","Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets->pycaret[full]) (22.3.0)\n","Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->pycaret[full]) (0.13.3)\n","Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->pycaret[full]) (1.8.0)\n","Collecting smmap<6,>=3.0.1\n","  Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n","Requirement already satisfied: appdirs~=1.4.3 in /usr/local/lib/python3.7/dist-packages (from fs->triad>=0.6.0->fugue>=0.6.5; extra == \"full\"->pycaret[full]) (1.4.4)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->panel==0.12.6->autoviz; extra == \"full\"->pycaret[full]) (0.5.1)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->autoviz; extra == \"full\"->pycaret[full]) (0.6.0)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->autoviz; extra == \"full\"->pycaret[full]) (0.8.4)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->autoviz; extra == \"full\"->pycaret[full]) (1.5.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->autoviz; extra == \"full\"->pycaret[full]) (0.7.1)\n","Requirement already satisfied: qtpy in /usr/local/lib/python3.7/dist-packages (from qtconsole->jupyter->autoviz; extra == \"full\"->pycaret[full]) (2.0.1)\n","Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.7/dist-packages (from deprecated>=1.2.3->redis>=3.5.0->ray[tune]>=1.0.0; extra == \"full\"->pycaret[full]) (1.14.0)\n","Collecting sniffio>=1.1\n","  Downloading sniffio-1.2.0-py3-none-any.whl (10 kB)\n","Collecting zope.interface\n","  Downloading zope.interface-5.4.0-cp37-cp37m-manylinux2010_x86_64.whl (251 kB)\n","\u001b[K     |████████████████████████████████| 251 kB 17.2 MB/s \n","\u001b[?25hCollecting zope.event\n","  Downloading zope.event-4.5.0-py2.py3-none-any.whl (6.8 kB)\n","Requirement already satisfied: scikit-image>=0.12 in /usr/local/lib/python3.7/dist-packages (from lime>=0.1.1.33; extra == \"lime\"->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]>=0.2.4->interpret<=0.2.4; extra == \"full\"->pycaret[full]) (0.18.3)\n","Collecting pathos\n","  Downloading pathos-0.2.8-py2.py3-none-any.whl (81 kB)\n","\u001b[K     |████████████████████████████████| 81 kB 9.2 MB/s \n","\u001b[?25hCollecting brotli\n","  Downloading Brotli-1.0.9-cp37-cp37m-manylinux1_x86_64.whl (357 kB)\n","\u001b[K     |████████████████████████████████| 357 kB 47.9 MB/s \n","\u001b[?25hRequirement already satisfied: atomicwrites>=1.0 in /usr/local/lib/python3.7/dist-packages (from pytest->dtreeviz>=1.3->explainerdashboard; extra == \"full\"->pycaret[full]) (1.4.0)\n","Requirement already satisfied: py>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from pytest->dtreeviz>=1.3->explainerdashboard; extra == \"full\"->pycaret[full]) (1.11.0)\n","Requirement already satisfied: more-itertools>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from pytest->dtreeviz>=1.3->explainerdashboard; extra == \"full\"->pycaret[full]) (8.12.0)\n","Requirement already satisfied: pluggy<0.8,>=0.5 in /usr/local/lib/python3.7/dist-packages (from pytest->dtreeviz>=1.3->explainerdashboard; extra == \"full\"->pycaret[full]) (0.7.1)\n","Collecting uc-micro-py\n","  Downloading uc_micro_py-1.0.1-py3-none-any.whl (6.2 kB)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.5.0->msrest>=0.6.21->azure-storage-blob; extra == \"full\"->pycaret[full]) (3.2.0)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.12->cryptography>=2.1.4->azure-storage-blob; extra == \"full\"->pycaret[full]) (2.21)\n","Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.0->google-cloud-storage; extra == \"full\"->pycaret[full]) (1.56.0)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=1.2.0->google-cloud-storage; extra == \"full\"->pycaret[full]) (0.4.8)\n","Collecting pyperclip>=1.6\n","  Downloading pyperclip-1.8.2.tar.gz (20 kB)\n","Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image>=0.12->lime>=0.1.1.33; extra == \"lime\"->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]>=0.2.4->interpret<=0.2.4; extra == \"full\"->pycaret[full]) (2.4.1)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.7/dist-packages (from scikit-image>=0.12->lime>=0.1.1.33; extra == \"lime\"->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]>=0.2.4->interpret<=0.2.4; extra == \"full\"->pycaret[full]) (2021.11.2)\n","Collecting pox>=0.3.0\n","  Downloading pox-0.3.0-py2.py3-none-any.whl (30 kB)\n","Collecting ppft>=1.6.6.4\n","  Downloading ppft-1.6.6.4-py3-none-any.whl (65 kB)\n","\u001b[K     |████████████████████████████████| 65 kB 3.5 MB/s \n","\u001b[?25hRequirement already satisfied: multiprocess>=0.70.12 in /usr/local/lib/python3.7/dist-packages (from pathos->SALib>=1.3.3; extra == \"sensitivity\"->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]>=0.2.4->interpret<=0.2.4; extra == \"full\"->pycaret[full]) (0.70.12.2)\n","Building wheels for collected packages: umap-learn, pyLDAvis, pyod, pynndescent, htmlmin, databricks-cli, emoji, dash-auth, dtreeviz, python-multipart, ffmpy, imagehash, antlr4-python3-runtime, ciso8601, lime, retrying, pyperclip\n","  Building wheel for umap-learn (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for umap-learn: filename=umap_learn-0.5.2-py3-none-any.whl size=82708 sha256=c5a2cab7e41988f3fe650646395abd99b9d8621425bbd649d283c4b678be2076\n","  Stored in directory: /root/.cache/pip/wheels/84/1b/c6/aaf68a748122632967cef4dffef68224eb16798b6793257d82\n","  Building wheel for pyLDAvis (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyLDAvis: filename=pyLDAvis-3.3.1-py2.py3-none-any.whl size=136898 sha256=aaaf59259a241c49db72b0f2e0badf15b2e2a64fe437266db503809268c98cac\n","  Stored in directory: /root/.cache/pip/wheels/c9/21/f6/17bcf2667e8a68532ba2fbf6d5c72fdf4c7f7d9abfa4852d2f\n","  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyod: filename=pyod-0.9.8-py3-none-any.whl size=136775 sha256=edd40c098c0eff7f37af72ec4deb74e2fda88d17c8f1d70704726cbc238b82c1\n","  Stored in directory: /root/.cache/pip/wheels/ba/8f/95/6cb376aec9fae09d9b1622d1662c902b522deb353cb80836a6\n","  Building wheel for pynndescent (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pynndescent: filename=pynndescent-0.5.6-py3-none-any.whl size=53943 sha256=254c19a07db944ebfcf935f556d404640b475fd476275039bf7c4eb4cf9cde1c\n","  Stored in directory: /root/.cache/pip/wheels/03/f1/56/f80d72741e400345b5a5b50ec3d929aca581bf45e0225d5c50\n","  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for htmlmin: filename=htmlmin-0.1.12-py3-none-any.whl size=27098 sha256=50b2833db8b56056ab27b5268d0ed65f9d4ea80722e7b173ba12d4713a7c32e7\n","  Stored in directory: /root/.cache/pip/wheels/70/e1/52/5b14d250ba868768823940c3229e9950d201a26d0bd3ee8655\n","  Building wheel for databricks-cli (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for databricks-cli: filename=databricks_cli-0.16.4-py3-none-any.whl size=106877 sha256=534fbf20399bfed88d176ebfb04954d30d793445ddc4c55597e31fdd72cfa2f7\n","  Stored in directory: /root/.cache/pip/wheels/a2/a1/6d/fa1d22ea25ed8593887437fe1c7e00f6ef307fc240ccd4dc5c\n","  Building wheel for emoji (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for emoji: filename=emoji-1.7.0-py3-none-any.whl size=171046 sha256=314407c013594b6bd219d3a3657199f6bdde863c2a4c023fd864225585bd80e4\n","  Stored in directory: /root/.cache/pip/wheels/8a/4e/b6/57b01db010d17ef6ea9b40300af725ef3e210cb1acfb7ac8b6\n","  Building wheel for dash-auth (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for dash-auth: filename=dash_auth-1.4.1-py3-none-any.whl size=476152 sha256=9c3975f3f615bdc9c2fe5c5cc7aee1c0e2e416d0e3db735fef09282983214bae\n","  Stored in directory: /root/.cache/pip/wheels/19/b2/02/3c3f05988ff92f02c52ce4e081859d423537e8e9b13f673c02\n","  Building wheel for dtreeviz (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for dtreeviz: filename=dtreeviz-1.3.5-py3-none-any.whl size=67330 sha256=0773f15179c4820e6c94be827b4d404f2a9461fcbac4b0b17b8f159f978b93b4\n","  Stored in directory: /root/.cache/pip/wheels/9d/84/55/4de0a214e0b9d21a96fc343b4a85547f3dab815a49682dfeb2\n","  Building wheel for python-multipart (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for python-multipart: filename=python_multipart-0.0.5-py3-none-any.whl size=31678 sha256=7ee49b5cc6ee6ffa5b319b1a9aa76b4452900531f345ba970e74f9dd6436068d\n","  Stored in directory: /root/.cache/pip/wheels/2c/41/7c/bfd1c180534ffdcc0972f78c5758f89881602175d48a8bcd2c\n","  Building wheel for ffmpy (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ffmpy: filename=ffmpy-0.3.0-py3-none-any.whl size=4712 sha256=b1dfb2417bc8471bef47a39bd76fc9ed96c8d68e71749e9f6ab0792c6ed11519\n","  Stored in directory: /root/.cache/pip/wheels/13/e4/6c/e8059816e86796a597c6e6b0d4c880630f51a1fcfa0befd5e6\n","  Building wheel for imagehash (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for imagehash: filename=ImageHash-4.2.1-py2.py3-none-any.whl size=295206 sha256=02e9b3aa6cd11d3b50e2251e2df5d067f66eec12dc15a1336df242991da292a3\n","  Stored in directory: /root/.cache/pip/wheels/4c/d5/59/5e3e297533ddb09407769762985d134135064c6831e29a914e\n","  Building wheel for antlr4-python3-runtime (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for antlr4-python3-runtime: filename=antlr4_python3_runtime-4.9.3-py3-none-any.whl size=144575 sha256=33546260f938b44ea94dfad253c578e2fd91eb732f860c3bdeab21500ba6904b\n","  Stored in directory: /root/.cache/pip/wheels/8b/8d/53/2af8772d9aec614e3fc65e53d4a993ad73c61daa8bbd85a873\n","  Building wheel for ciso8601 (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ciso8601: filename=ciso8601-2.2.0-cp37-cp37m-linux_x86_64.whl size=37483 sha256=9123977c1838e81423c39568a69bb2cbadd3c87c28c68dd45868184d6a6fa788\n","  Stored in directory: /root/.cache/pip/wheels/ad/25/8f/3b0a82303191efe3c1204f3741c42d8eb2b0236567e22485de\n","  Building wheel for lime (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for lime: filename=lime-0.2.0.1-py3-none-any.whl size=283857 sha256=b54ffa572b437eafcda0f5448b15e3e2e3c79681f7276c69d022c03396d07e39\n","  Stored in directory: /root/.cache/pip/wheels/ca/cb/e5/ac701e12d365a08917bf4c6171c0961bc880a8181359c66aa7\n","  Building wheel for retrying (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for retrying: filename=retrying-1.3.3-py3-none-any.whl size=11447 sha256=9525ae0bfe042248e6ba5a7fb4c7189bb830e50e69f3d8c069b891bb9910defa\n","  Stored in directory: /root/.cache/pip/wheels/f9/8d/8d/f6af3f7f9eea3553bc2fe6d53e4b287dad18b06a861ac56ddf\n","  Building wheel for pyperclip (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyperclip: filename=pyperclip-1.8.2-py3-none-any.whl size=11137 sha256=5d38022dd8f2a818cfceb2fbff4e835e9fcf587800985fd9e4ad796c2d071bb5\n","  Stored in directory: /root/.cache/pip/wheels/9f/18/84/8f69f8b08169c7bae2dde6bd7daf0c19fca8c8e500ee620a28\n","Successfully built umap-learn pyLDAvis pyod pynndescent htmlmin databricks-cli emoji dash-auth dtreeviz python-multipart ffmpy imagehash antlr4-python3-runtime ciso8601 lime retrying pyperclip\n","Installing collected packages: scikit-learn, Boruta, pynndescent, umap-learn, lightgbm, tangled-up-in-unicode, multimethod, imagehash, visions, phik, htmlmin, pydantic, requests, pandas-profiling, kmodes, scikit-plot, funcy, pyLDAvis, Mako, alembic, websocket-client, docker, databricks-cli, gunicorn, querystring-parser, prometheus-flask-exporter, smmap, gitdb, gitpython, mlflow, imbalanced-learn, pyod, mlxtend, ciso8601, fs, triad, adagio, antlr4-python3-runtime, qpd, fugue, bokeh, panel, emoji, xgboost, holoviews, fsspec, hvplot, autoviz, h11, asgiref, uvicorn, async-timeout, deprecated, redis, grpcio, tensorboardX, ray, sniffio, anyio, starlette, fastapi, zope.interface, zope.event, gevent, dash-table, brotli, flask-compress, dash-html-components, dash-core-components, dash, dash-cytoscape, lime, pox, ppft, pathos, SALib, slicer, shap, skope-rules, treeinterpreter, interpret-core, interpret, retrying, chart-studio, flask-seasurf, ua-parser, dash-auth, colour, dtreeviz, orjson, oyaml, waitress, WTForms, Flask-WTF, flask-simplelogin, dash-bootstrap-components, ansi2html, jupyter-dash, explainerdashboard, python-multipart, ffmpy, pycryptodome, pynacl, cryptography, bcrypt, paramiko, mdurl, uc-micro-py, linkify-it-py, mdit-py-plugins, markdown-it-py, pydub, asynctest, multidict, frozenlist, aiosignal, yarl, aiohttp, monotonic, backoff, analytics-python, gradio, isodate, msrest, azure-core, azure-storage-blob, dataclasses, evidently, m2cgen, jmespath, botocore, s3transfer, boto3, tune-sklearn, pyaml, scikit-optimize, fairlearn, colorlog, cmaes, pyperclip, cmd2, autopage, pbr, stevedore, cliff, optuna, catboost, pycaret\n","  Attempting uninstall: scikit-learn\n","    Found existing installation: scikit-learn 1.0.2\n","    Uninstalling scikit-learn-1.0.2:\n","      Successfully uninstalled scikit-learn-1.0.2\n","  Attempting uninstall: lightgbm\n","    Found existing installation: lightgbm 2.2.3\n","    Uninstalling lightgbm-2.2.3:\n","      Successfully uninstalled lightgbm-2.2.3\n","  Attempting uninstall: requests\n","    Found existing installation: requests 2.23.0\n","    Uninstalling requests-2.23.0:\n","      Successfully uninstalled requests-2.23.0\n","  Attempting uninstall: pandas-profiling\n","    Found existing installation: pandas-profiling 1.4.1\n","    Uninstalling pandas-profiling-1.4.1:\n","      Successfully uninstalled pandas-profiling-1.4.1\n","  Attempting uninstall: imbalanced-learn\n","    Found existing installation: imbalanced-learn 0.8.1\n","    Uninstalling imbalanced-learn-0.8.1:\n","      Successfully uninstalled imbalanced-learn-0.8.1\n","  Attempting uninstall: mlxtend\n","    Found existing installation: mlxtend 0.14.0\n","    Uninstalling mlxtend-0.14.0:\n","      Successfully uninstalled mlxtend-0.14.0\n","  Attempting uninstall: bokeh\n","    Found existing installation: bokeh 2.3.3\n","    Uninstalling bokeh-2.3.3:\n","      Successfully uninstalled bokeh-2.3.3\n","  Attempting uninstall: panel\n","    Found existing installation: panel 0.12.1\n","    Uninstalling panel-0.12.1:\n","      Successfully uninstalled panel-0.12.1\n","  Attempting uninstall: xgboost\n","    Found existing installation: xgboost 0.90\n","    Uninstalling xgboost-0.90:\n","      Successfully uninstalled xgboost-0.90\n","  Attempting uninstall: holoviews\n","    Found existing installation: holoviews 1.14.8\n","    Uninstalling holoviews-1.14.8:\n","      Successfully uninstalled holoviews-1.14.8\n","  Attempting uninstall: grpcio\n","    Found existing installation: grpcio 1.44.0\n","    Uninstalling grpcio-1.44.0:\n","      Successfully uninstalled grpcio-1.44.0\n","\u001b[31mERROR: pip's legacy dependency resolver does not consider dependency conflicts when selecting packages. This behaviour is the source of the following dependency conflicts.\n","tensorflow 2.8.0 requires tf-estimator-nightly==2.8.0.dev2021122109, which is not installed.\n","yellowbrick 1.4 requires scikit-learn>=1.0.0, but you'll have scikit-learn 0.23.2 which is incompatible.\n","pandas-profiling 3.1.0 requires joblib~=1.0.1, but you'll have joblib 1.1.0 which is incompatible.\n","pandas-profiling 3.1.0 requires PyYAML>=5.0.0, but you'll have pyyaml 3.13 which is incompatible.\n","google-colab 1.0.0 requires requests~=2.23.0, but you'll have requests 2.27.1 which is incompatible.\n","datascience 0.10.6 requires folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\n","phik 0.12.2 requires scipy>=1.5.2, but you'll have scipy 1.4.1 which is incompatible.\n","mlflow 1.24.0 requires pyyaml>=5.1, but you'll have pyyaml 3.13 which is incompatible.\n","autoviz 0.1.36 requires matplotlib>=3.3.3, but you'll have matplotlib 3.2.2 which is incompatible.\n","flask-simplelogin 0.1.1 requires click<9.0.0,>=8.0.1, but you'll have click 7.1.2 which is incompatible.\n","azure-core 1.23.0 requires typing-extensions>=4.0.1, but you'll have typing-extensions 3.10.0.2 which is incompatible.\n","evidently 0.1.47.dev1 requires PyYAML~=5.1, but you'll have pyyaml 3.13 which is incompatible.\n","evidently 0.1.47.dev1 requires scipy>=1.5.4, but you'll have scipy 1.4.1 which is incompatible.\n","evidently 0.1.47.dev1 requires statsmodels>=0.12.2, but you'll have statsmodels 0.10.2 which is incompatible.\n","botocore 1.24.27 requires urllib3<1.27,>=1.25.4, but you'll have urllib3 1.24.3 which is incompatible.\u001b[0m\n","Successfully installed Boruta-0.3 Flask-WTF-0.15.1 Mako-1.2.0 SALib-1.4.5 WTForms-3.0.1 adagio-0.2.3 aiohttp-3.8.1 aiosignal-1.2.0 alembic-1.7.7 analytics-python-1.4.0 ansi2html-1.7.0 antlr4-python3-runtime-4.9.3 anyio-3.5.0 asgiref-3.5.0 async-timeout-4.0.2 asynctest-0.13.0 autopage-0.5.0 autoviz-0.1.36 azure-core-1.23.0 azure-storage-blob-12.10.0 backoff-1.10.0 bcrypt-3.2.0 bokeh-2.4.2 boto3-1.21.27 botocore-1.24.27 brotli-1.0.9 catboost-1.0.4 chart-studio-1.1.0 ciso8601-2.2.0 cliff-3.10.1 cmaes-0.8.2 cmd2-2.4.0 colorlog-6.6.0 colour-0.1.5 cryptography-36.0.2 dash-2.3.0 dash-auth-1.4.1 dash-bootstrap-components-0.13.1 dash-core-components-2.0.0 dash-cytoscape-0.3.0 dash-html-components-2.0.0 dash-table-5.0.0 databricks-cli-0.16.4 dataclasses-0.6 deprecated-1.2.13 docker-5.0.3 dtreeviz-1.3.5 emoji-1.7.0 evidently-0.1.47.dev1 explainerdashboard-0.3.8 fairlearn-0.7.0 fastapi-0.75.0 ffmpy-0.3.0 flask-compress-1.11 flask-seasurf-0.3.1 flask-simplelogin-0.1.1 frozenlist-1.3.0 fs-2.4.15 fsspec-0.8.3 fugue-0.6.5 funcy-1.17 gevent-21.12.0 gitdb-4.0.9 gitpython-3.1.27 gradio-2.8.14 grpcio-1.43.0 gunicorn-20.1.0 h11-0.13.0 holoviews-1.14.6 htmlmin-0.1.12 hvplot-0.7.3 imagehash-4.2.1 imbalanced-learn-0.7.0 interpret-0.2.4 interpret-core-0.2.7 isodate-0.6.1 jmespath-1.0.0 jupyter-dash-0.4.1 kmodes-0.11.1 lightgbm-3.3.2 lime-0.2.0.1 linkify-it-py-1.0.3 m2cgen-0.9.0 markdown-it-py-2.0.1 mdit-py-plugins-0.3.0 mdurl-0.1.0 mlflow-1.24.0 mlxtend-0.19.0 monotonic-1.6 msrest-0.6.21 multidict-6.0.2 multimethod-1.7 optuna-2.10.0 orjson-3.6.7 oyaml-1.0 pandas-profiling-3.1.0 panel-0.12.6 paramiko-2.10.3 pathos-0.2.8 pbr-5.8.1 phik-0.12.2 pox-0.3.0 ppft-1.6.6.4 prometheus-flask-exporter-0.19.0 pyLDAvis-3.3.1 pyaml-21.10.1 pycaret-2.3.8 pycryptodome-3.14.1 pydantic-1.9.0 pydub-0.25.1 pynacl-1.5.0 pynndescent-0.5.6 pyod-0.9.8 pyperclip-1.8.2 python-multipart-0.0.5 qpd-0.2.6 querystring-parser-1.2.4 ray-1.11.0 redis-4.2.0 requests-2.27.1 retrying-1.3.3 s3transfer-0.5.2 scikit-learn-0.23.2 scikit-optimize-0.9.0 scikit-plot-0.3.7 shap-0.40.0 skope-rules-1.0.1 slicer-0.0.7 smmap-5.0.0 sniffio-1.2.0 starlette-0.17.1 stevedore-3.5.0 tangled-up-in-unicode-0.1.0 tensorboardX-2.5 treeinterpreter-0.2.3 triad-0.6.0 tune-sklearn-0.4.1 ua-parser-0.10.0 uc-micro-py-1.0.1 umap-learn-0.5.2 uvicorn-0.17.6 visions-0.7.4 waitress-2.1.1 websocket-client-1.3.1 xgboost-1.5.2 yarl-1.7.2 zope.event-4.5.0 zope.interface-5.4.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["dataclasses","grpc","requests","sklearn"]}}},"metadata":{}}]},{"cell_type":"code","source":[""],"metadata":{"id":"8-wavtuYGJlN"},"execution_count":null,"outputs":[]}]}